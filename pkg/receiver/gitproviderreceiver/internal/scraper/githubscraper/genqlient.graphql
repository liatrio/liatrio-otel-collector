query getRepoDataBySearch(
  $searchQuery: String!
  # @genqlient(pointer: true)
  $repoCursor: String
) {
  search(
    query: $searchQuery
    type: REPOSITORY
    first: 100
    after: $repoCursor
  ) {
    repositoryCount
    edges {
      # @genqlient(typename: "SearchNode")
      node {
        ... on Repository {
          id
          name
          defaultBranchRef {
            name
          }
        }
      }
    }
    pageInfo {
      hasNextPage
      endCursor
    }
  }
}

query checkLogin($login: String!) {
  user(login: $login) {
    login
  }
  organization(login: $login) {
    login
  }
}

query getCommitData(
  $name: String!
  $owner: String!
  $branchFirst: Int!
  $commitFirst: Int!
  # @genqlient(pointer: true)
  $commitCursor: String
  $branchName: String!
) {
  repository(name: $name, owner: $owner) {
    refs(refPrefix: "refs/heads/", first: $branchFirst, query: $branchName) {
      # @genqlient(typename: "CommitNode")
      nodes {
        target {
          ... on Commit {
            id
            history(first: $commitFirst, after: $commitCursor) {
              edges {
                node {
                  committedDate
                  additions
                  deletions
                }
              }
              pageInfo {
                endCursor
                hasNextPage
              }
            }
          }
        }
      }
    }
  }
}

query getBranchData(
  $name: String!
  $owner: String!
  $branchFirst: Int!
  $targetBranch: String!
  # @genqlient(pointer: true)
  $branchCursor: String
) {
  repository(name: $name, owner: $owner) {
    refs(refPrefix: "refs/heads/", first: $branchFirst, after: $branchCursor) {
      totalCount
      # @genqlient(typename: "BranchNode")
      nodes {
        name
        compare(headRef: $targetBranch) {
          aheadBy
          behindBy
        }
      }
      pageInfo {
        endCursor
        startCursor
      }
    }
  }
}

query getBranchCount($name: String!, $owner: String!) {
  repository(name: $name, owner: $owner) {
    refs(refPrefix: "refs/heads/") {
      totalCount
    }
  }
}

query getPullRequestCount($name: String!, $owner: String!, $states: [PullRequestState!]) {
  repository(name: $name, owner: $owner) {
    pullRequests(states: $states){
      totalCount
    }
  }
}

query getPullRequestData(
  $name: String!
  $owner: String!
  $prFirst: Int!
  # @genqlient(pointer: true)
  $prCursor: String
) {
  repository(name: $name, owner: $owner) {
    pullRequests(
      first: $prFirst,
      after: $prCursor,
      states: [OPEN, MERGED]
    ) {
      # @genqlient(typename: "PullRequestNode")
      nodes {
        ... on PullRequest {
          createdAt
          merged
          mergedAt
          mergeCommit {
            deployments(last: 1, orderBy: {field: CREATED_AT, direction: ASC}) {
              nodes {
                createdAt
              }
              totalCount
            }
          }
        }
        headRefName
        reviews(states: APPROVED, last: 1) {
          totalCount
          nodes {
            ... on PullRequestReview{
              createdAt
            }
          }
        }
      }
      pageInfo {
        hasNextPage,
        endCursor
      }
    }
  }
}
