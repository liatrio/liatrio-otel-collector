// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package gitlabprocessor

import (
	"context"
	"encoding/json"

	"github.com/Khan/genqlient/graphql"
)

// Include type.
type CiConfigIncludeType string

const (
	// Remote include.
	CiConfigIncludeTypeRemote CiConfigIncludeType = "remote"
	// Local include.
	CiConfigIncludeTypeLocal CiConfigIncludeType = "local"
	// Project file include.
	CiConfigIncludeTypeFile CiConfigIncludeType = "file"
	// Template include.
	CiConfigIncludeTypeTemplate CiConfigIncludeType = "template"
	// Component include.
	CiConfigIncludeTypeComponent CiConfigIncludeType = "component"
)

var AllCiConfigIncludeType = []CiConfigIncludeType{
	CiConfigIncludeTypeRemote,
	CiConfigIncludeTypeLocal,
	CiConfigIncludeTypeFile,
	CiConfigIncludeTypeTemplate,
	CiConfigIncludeTypeComponent,
}

// Values for YAML processor result
type CiConfigStatus string

const (
	// Configuration file is valid.
	CiConfigStatusValid CiConfigStatus = "VALID"
	// Configuration file is not valid.
	CiConfigStatusInvalid CiConfigStatus = "INVALID"
)

var AllCiConfigStatus = []CiConfigStatus{
	CiConfigStatusValid,
	CiConfigStatusInvalid,
}

// PipelineStagesConnection includes the GraphQL fields of CiConfigStageConnection requested by the fragment PipelineStagesConnection.
// The GraphQL type's documentation follows.
//
// The connection type for CiConfigStage.
type PipelineStagesConnection struct {
	// A list of nodes.
	Nodes    []PipelineStagesConnectionNodesCiConfigStage `json:"nodes"`
	Typename string                                       `json:"__typename"`
}

// GetNodes returns PipelineStagesConnection.Nodes, and is useful for accessing the field via an interface.
func (v *PipelineStagesConnection) GetNodes() []PipelineStagesConnectionNodesCiConfigStage {
	return v.Nodes
}

// GetTypename returns PipelineStagesConnection.Typename, and is useful for accessing the field via an interface.
func (v *PipelineStagesConnection) GetTypename() string { return v.Typename }

// PipelineStagesConnectionNodesCiConfigStage includes the requested fields of the GraphQL type CiConfigStage.
type PipelineStagesConnectionNodesCiConfigStage struct {
	// Name of the stage.
	Name string `json:"name"`
	// Groups of jobs for the stage.
	Groups   PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnection `json:"groups"`
	Typename string                                                                  `json:"__typename"`
}

// GetName returns PipelineStagesConnectionNodesCiConfigStage.Name, and is useful for accessing the field via an interface.
func (v *PipelineStagesConnectionNodesCiConfigStage) GetName() string { return v.Name }

// GetGroups returns PipelineStagesConnectionNodesCiConfigStage.Groups, and is useful for accessing the field via an interface.
func (v *PipelineStagesConnectionNodesCiConfigStage) GetGroups() PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnection {
	return v.Groups
}

// GetTypename returns PipelineStagesConnectionNodesCiConfigStage.Typename, and is useful for accessing the field via an interface.
func (v *PipelineStagesConnectionNodesCiConfigStage) GetTypename() string { return v.Typename }

// PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnection includes the requested fields of the GraphQL type CiConfigGroupConnection.
// The GraphQL type's documentation follows.
//
// The connection type for CiConfigGroup.
type PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnection struct {
	// A list of nodes.
	Nodes    []PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroup `json:"nodes"`
	Typename string                                                                                      `json:"__typename"`
}

// GetNodes returns PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnection.Nodes, and is useful for accessing the field via an interface.
func (v *PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnection) GetNodes() []PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroup {
	return v.Nodes
}

// GetTypename returns PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnection.Typename, and is useful for accessing the field via an interface.
func (v *PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnection) GetTypename() string {
	return v.Typename
}

// PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroup includes the requested fields of the GraphQL type CiConfigGroup.
type PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroup struct {
	// Name of the job group.
	Name string `json:"name"`
	// Size of the job group.
	Size int `json:"size"`
	// Jobs in group.
	Jobs     PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnection `json:"jobs"`
	Typename string                                                                                                             `json:"__typename"`
}

// GetName returns PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroup.Name, and is useful for accessing the field via an interface.
func (v *PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroup) GetName() string {
	return v.Name
}

// GetSize returns PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroup.Size, and is useful for accessing the field via an interface.
func (v *PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroup) GetSize() int {
	return v.Size
}

// GetJobs returns PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroup.Jobs, and is useful for accessing the field via an interface.
func (v *PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroup) GetJobs() PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnection {
	return v.Jobs
}

// GetTypename returns PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroup.Typename, and is useful for accessing the field via an interface.
func (v *PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroup) GetTypename() string {
	return v.Typename
}

// PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnection includes the requested fields of the GraphQL type CiConfigJobConnection.
// The GraphQL type's documentation follows.
//
// The connection type for CiConfigJob.
type PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnection struct {
	// A list of nodes.
	Nodes    []PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJob `json:"nodes"`
	Typename string                                                                                                                               `json:"__typename"`
}

// GetNodes returns PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnection.Nodes, and is useful for accessing the field via an interface.
func (v *PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnection) GetNodes() []PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJob {
	return v.Nodes
}

// GetTypename returns PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnection.Typename, and is useful for accessing the field via an interface.
func (v *PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnection) GetTypename() string {
	return v.Typename
}

// PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJob includes the requested fields of the GraphQL type CiConfigJob.
type PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJob struct {
	// Name of the job.
	Name string `json:"name"`
	// Shell script that is executed by a runner.
	Script []string `json:"script"`
	// Override a set of commands that are executed before the job.
	BeforeScript []string `json:"beforeScript"`
	// Override a set of commands that are executed after the job.
	AfterScript []string `json:"afterScript"`
	// Name of an environment to which the job deploys.
	Environment string `json:"environment"`
	// Allow job to fail.
	AllowFailure bool `json:"allowFailure"`
	// List of tags that are used to select a runner.
	Tags []string `json:"tags"`
	// When to run the job.
	When string `json:"when"`
	// Jobs are created when these conditions do not apply.
	Only PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJobOnlyCiConfigJobRestriction `json:"only"`
	// Limit when jobs are not created.
	Except PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJobExceptCiConfigJobRestriction `json:"except"`
	// Builds that must complete before the jobs run.
	Needs    PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJobNeedsCiConfigNeedConnection `json:"needs"`
	Typename string                                                                                                                                                        `json:"__typename"`
}

// GetName returns PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJob.Name, and is useful for accessing the field via an interface.
func (v *PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJob) GetName() string {
	return v.Name
}

// GetScript returns PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJob.Script, and is useful for accessing the field via an interface.
func (v *PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJob) GetScript() []string {
	return v.Script
}

// GetBeforeScript returns PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJob.BeforeScript, and is useful for accessing the field via an interface.
func (v *PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJob) GetBeforeScript() []string {
	return v.BeforeScript
}

// GetAfterScript returns PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJob.AfterScript, and is useful for accessing the field via an interface.
func (v *PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJob) GetAfterScript() []string {
	return v.AfterScript
}

// GetEnvironment returns PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJob.Environment, and is useful for accessing the field via an interface.
func (v *PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJob) GetEnvironment() string {
	return v.Environment
}

// GetAllowFailure returns PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJob.AllowFailure, and is useful for accessing the field via an interface.
func (v *PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJob) GetAllowFailure() bool {
	return v.AllowFailure
}

// GetTags returns PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJob.Tags, and is useful for accessing the field via an interface.
func (v *PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJob) GetTags() []string {
	return v.Tags
}

// GetWhen returns PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJob.When, and is useful for accessing the field via an interface.
func (v *PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJob) GetWhen() string {
	return v.When
}

// GetOnly returns PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJob.Only, and is useful for accessing the field via an interface.
func (v *PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJob) GetOnly() PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJobOnlyCiConfigJobRestriction {
	return v.Only
}

// GetExcept returns PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJob.Except, and is useful for accessing the field via an interface.
func (v *PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJob) GetExcept() PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJobExceptCiConfigJobRestriction {
	return v.Except
}

// GetNeeds returns PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJob.Needs, and is useful for accessing the field via an interface.
func (v *PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJob) GetNeeds() PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJobNeedsCiConfigNeedConnection {
	return v.Needs
}

// GetTypename returns PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJob.Typename, and is useful for accessing the field via an interface.
func (v *PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJob) GetTypename() string {
	return v.Typename
}

// PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJobExceptCiConfigJobRestriction includes the requested fields of the GraphQL type CiConfigJobRestriction.
type PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJobExceptCiConfigJobRestriction struct {
	// Git refs the job restriction applies to.
	Refs     []string `json:"refs"`
	Typename string   `json:"__typename"`
}

// GetRefs returns PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJobExceptCiConfigJobRestriction.Refs, and is useful for accessing the field via an interface.
func (v *PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJobExceptCiConfigJobRestriction) GetRefs() []string {
	return v.Refs
}

// GetTypename returns PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJobExceptCiConfigJobRestriction.Typename, and is useful for accessing the field via an interface.
func (v *PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJobExceptCiConfigJobRestriction) GetTypename() string {
	return v.Typename
}

// PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJobNeedsCiConfigNeedConnection includes the requested fields of the GraphQL type CiConfigNeedConnection.
// The GraphQL type's documentation follows.
//
// The connection type for CiConfigNeed.
type PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJobNeedsCiConfigNeedConnection struct {
	// A list of nodes.
	Nodes    []PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJobNeedsCiConfigNeedConnectionNodesCiConfigNeed `json:"nodes"`
	Typename string                                                                                                                                                                           `json:"__typename"`
}

// GetNodes returns PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJobNeedsCiConfigNeedConnection.Nodes, and is useful for accessing the field via an interface.
func (v *PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJobNeedsCiConfigNeedConnection) GetNodes() []PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJobNeedsCiConfigNeedConnectionNodesCiConfigNeed {
	return v.Nodes
}

// GetTypename returns PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJobNeedsCiConfigNeedConnection.Typename, and is useful for accessing the field via an interface.
func (v *PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJobNeedsCiConfigNeedConnection) GetTypename() string {
	return v.Typename
}

// PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJobNeedsCiConfigNeedConnectionNodesCiConfigNeed includes the requested fields of the GraphQL type CiConfigNeed.
type PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJobNeedsCiConfigNeedConnectionNodesCiConfigNeed struct {
	// Name of the need.
	Name     string `json:"name"`
	Typename string `json:"__typename"`
}

// GetName returns PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJobNeedsCiConfigNeedConnectionNodesCiConfigNeed.Name, and is useful for accessing the field via an interface.
func (v *PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJobNeedsCiConfigNeedConnectionNodesCiConfigNeed) GetName() string {
	return v.Name
}

// GetTypename returns PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJobNeedsCiConfigNeedConnectionNodesCiConfigNeed.Typename, and is useful for accessing the field via an interface.
func (v *PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJobNeedsCiConfigNeedConnectionNodesCiConfigNeed) GetTypename() string {
	return v.Typename
}

// PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJobOnlyCiConfigJobRestriction includes the requested fields of the GraphQL type CiConfigJobRestriction.
type PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJobOnlyCiConfigJobRestriction struct {
	// Git refs the job restriction applies to.
	Refs     []string `json:"refs"`
	Typename string   `json:"__typename"`
}

// GetRefs returns PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJobOnlyCiConfigJobRestriction.Refs, and is useful for accessing the field via an interface.
func (v *PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJobOnlyCiConfigJobRestriction) GetRefs() []string {
	return v.Refs
}

// GetTypename returns PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJobOnlyCiConfigJobRestriction.Typename, and is useful for accessing the field via an interface.
func (v *PipelineStagesConnectionNodesCiConfigStageGroupsCiConfigGroupConnectionNodesCiConfigGroupJobsCiConfigJobConnectionNodesCiConfigJobOnlyCiConfigJobRestriction) GetTypename() string {
	return v.Typename
}

// __getBlobContentInput is used internally by genqlient
type __getBlobContentInput struct {
	ProjectPath string `json:"projectPath"`
	Path        string `json:"path"`
	Ref         string `json:"ref"`
}

// GetProjectPath returns __getBlobContentInput.ProjectPath, and is useful for accessing the field via an interface.
func (v *__getBlobContentInput) GetProjectPath() string { return v.ProjectPath }

// GetPath returns __getBlobContentInput.Path, and is useful for accessing the field via an interface.
func (v *__getBlobContentInput) GetPath() string { return v.Path }

// GetRef returns __getBlobContentInput.Ref, and is useful for accessing the field via an interface.
func (v *__getBlobContentInput) GetRef() string { return v.Ref }

// __getCiConfigDataInput is used internally by genqlient
type __getCiConfigDataInput struct {
	ProjectPath string `json:"projectPath"`
	Sha         string `json:"sha"`
	Content     string `json:"content"`
}

// GetProjectPath returns __getCiConfigDataInput.ProjectPath, and is useful for accessing the field via an interface.
func (v *__getCiConfigDataInput) GetProjectPath() string { return v.ProjectPath }

// GetSha returns __getCiConfigDataInput.Sha, and is useful for accessing the field via an interface.
func (v *__getCiConfigDataInput) GetSha() string { return v.Sha }

// GetContent returns __getCiConfigDataInput.Content, and is useful for accessing the field via an interface.
func (v *__getCiConfigDataInput) GetContent() string { return v.Content }

// getBlobContentProject includes the requested fields of the GraphQL type Project.
type getBlobContentProject struct {
	// ID of the project.
	Id string `json:"id"`
	// Git repository of the project.
	Repository getBlobContentProjectRepository `json:"repository"`
}

// GetId returns getBlobContentProject.Id, and is useful for accessing the field via an interface.
func (v *getBlobContentProject) GetId() string { return v.Id }

// GetRepository returns getBlobContentProject.Repository, and is useful for accessing the field via an interface.
func (v *getBlobContentProject) GetRepository() getBlobContentProjectRepository { return v.Repository }

// getBlobContentProjectRepository includes the requested fields of the GraphQL type Repository.
type getBlobContentProjectRepository struct {
	// Blobs contained within the repository
	Blobs getBlobContentProjectRepositoryBlobsRepositoryBlobConnection `json:"blobs"`
}

// GetBlobs returns getBlobContentProjectRepository.Blobs, and is useful for accessing the field via an interface.
func (v *getBlobContentProjectRepository) GetBlobs() getBlobContentProjectRepositoryBlobsRepositoryBlobConnection {
	return v.Blobs
}

// getBlobContentProjectRepositoryBlobsRepositoryBlobConnection includes the requested fields of the GraphQL type RepositoryBlobConnection.
// The GraphQL type's documentation follows.
//
// The connection type for RepositoryBlob.
type getBlobContentProjectRepositoryBlobsRepositoryBlobConnection struct {
	// A list of nodes.
	Nodes []getBlobContentProjectRepositoryBlobsRepositoryBlobConnectionNodesRepositoryBlob `json:"nodes"`
}

// GetNodes returns getBlobContentProjectRepositoryBlobsRepositoryBlobConnection.Nodes, and is useful for accessing the field via an interface.
func (v *getBlobContentProjectRepositoryBlobsRepositoryBlobConnection) GetNodes() []getBlobContentProjectRepositoryBlobsRepositoryBlobConnectionNodesRepositoryBlob {
	return v.Nodes
}

// getBlobContentProjectRepositoryBlobsRepositoryBlobConnectionNodesRepositoryBlob includes the requested fields of the GraphQL type RepositoryBlob.
type getBlobContentProjectRepositoryBlobsRepositoryBlobConnectionNodesRepositoryBlob struct {
	// ID of the blob.
	Id string `json:"id"`
	// Raw content of the blob.
	RawBlob string `json:"rawBlob"`
}

// GetId returns getBlobContentProjectRepositoryBlobsRepositoryBlobConnectionNodesRepositoryBlob.Id, and is useful for accessing the field via an interface.
func (v *getBlobContentProjectRepositoryBlobsRepositoryBlobConnectionNodesRepositoryBlob) GetId() string {
	return v.Id
}

// GetRawBlob returns getBlobContentProjectRepositoryBlobsRepositoryBlobConnectionNodesRepositoryBlob.RawBlob, and is useful for accessing the field via an interface.
func (v *getBlobContentProjectRepositoryBlobsRepositoryBlobConnectionNodesRepositoryBlob) GetRawBlob() string {
	return v.RawBlob
}

// getBlobContentResponse is returned by getBlobContent on success.
type getBlobContentResponse struct {
	// Find a project.
	Project getBlobContentProject `json:"project"`
}

// GetProject returns getBlobContentResponse.Project, and is useful for accessing the field via an interface.
func (v *getBlobContentResponse) GetProject() getBlobContentProject { return v.Project }

// getCiConfigDataCiConfig includes the requested fields of the GraphQL type CiConfig.
type getCiConfigDataCiConfig struct {
	// Linting errors.
	Errors []string `json:"errors"`
	// List of included files.
	Includes []getCiConfigDataCiConfigIncludesCiConfigInclude `json:"includes"`
	// Merged CI configuration YAML.
	MergedYaml string `json:"mergedYaml"`
	// Status of linting, can be either valid or invalid.
	Status CiConfigStatus `json:"status"`
	// Stages of the pipeline.
	Stages   getCiConfigDataCiConfigStagesCiConfigStageConnection `json:"stages"`
	Typename string                                               `json:"__typename"`
}

// GetErrors returns getCiConfigDataCiConfig.Errors, and is useful for accessing the field via an interface.
func (v *getCiConfigDataCiConfig) GetErrors() []string { return v.Errors }

// GetIncludes returns getCiConfigDataCiConfig.Includes, and is useful for accessing the field via an interface.
func (v *getCiConfigDataCiConfig) GetIncludes() []getCiConfigDataCiConfigIncludesCiConfigInclude {
	return v.Includes
}

// GetMergedYaml returns getCiConfigDataCiConfig.MergedYaml, and is useful for accessing the field via an interface.
func (v *getCiConfigDataCiConfig) GetMergedYaml() string { return v.MergedYaml }

// GetStatus returns getCiConfigDataCiConfig.Status, and is useful for accessing the field via an interface.
func (v *getCiConfigDataCiConfig) GetStatus() CiConfigStatus { return v.Status }

// GetStages returns getCiConfigDataCiConfig.Stages, and is useful for accessing the field via an interface.
func (v *getCiConfigDataCiConfig) GetStages() getCiConfigDataCiConfigStagesCiConfigStageConnection {
	return v.Stages
}

// GetTypename returns getCiConfigDataCiConfig.Typename, and is useful for accessing the field via an interface.
func (v *getCiConfigDataCiConfig) GetTypename() string { return v.Typename }

// getCiConfigDataCiConfigIncludesCiConfigInclude includes the requested fields of the GraphQL type CiConfigInclude.
type getCiConfigDataCiConfigIncludesCiConfigInclude struct {
	// File location. It can be masked if it contains masked variables. For example, `".gitlab/ci/build-images.gitlab-ci.yml"`.
	Location string `json:"location"`
	// Include type.
	Type CiConfigIncludeType `json:"type"`
	// File blob location. It can be masked if it contains masked variables. For example, `"https://gitlab.com/gitlab-org/gitlab/-/blob/e52d6d0246d7375291850e61f0abc101fbda9dc2/.gitlab/ci/build-images.gitlab-ci.yml"`.
	Blob string `json:"blob"`
	// File raw location. It can be masked if it contains masked variables. For example, `"https://gitlab.com/gitlab-org/gitlab/-/raw/e52d6d0246d7375291850e61f0abc101fbda9dc2/.gitlab/ci/build-images.gitlab-ci.yml"`.
	Raw      string `json:"raw"`
	Typename string `json:"__typename"`
}

// GetLocation returns getCiConfigDataCiConfigIncludesCiConfigInclude.Location, and is useful for accessing the field via an interface.
func (v *getCiConfigDataCiConfigIncludesCiConfigInclude) GetLocation() string { return v.Location }

// GetType returns getCiConfigDataCiConfigIncludesCiConfigInclude.Type, and is useful for accessing the field via an interface.
func (v *getCiConfigDataCiConfigIncludesCiConfigInclude) GetType() CiConfigIncludeType { return v.Type }

// GetBlob returns getCiConfigDataCiConfigIncludesCiConfigInclude.Blob, and is useful for accessing the field via an interface.
func (v *getCiConfigDataCiConfigIncludesCiConfigInclude) GetBlob() string { return v.Blob }

// GetRaw returns getCiConfigDataCiConfigIncludesCiConfigInclude.Raw, and is useful for accessing the field via an interface.
func (v *getCiConfigDataCiConfigIncludesCiConfigInclude) GetRaw() string { return v.Raw }

// GetTypename returns getCiConfigDataCiConfigIncludesCiConfigInclude.Typename, and is useful for accessing the field via an interface.
func (v *getCiConfigDataCiConfigIncludesCiConfigInclude) GetTypename() string { return v.Typename }

// getCiConfigDataCiConfigStagesCiConfigStageConnection includes the requested fields of the GraphQL type CiConfigStageConnection.
// The GraphQL type's documentation follows.
//
// The connection type for CiConfigStage.
type getCiConfigDataCiConfigStagesCiConfigStageConnection struct {
	PipelineStagesConnection `json:"-"`
	Typename                 string `json:"__typename"`
}

// GetTypename returns getCiConfigDataCiConfigStagesCiConfigStageConnection.Typename, and is useful for accessing the field via an interface.
func (v *getCiConfigDataCiConfigStagesCiConfigStageConnection) GetTypename() string {
	return v.Typename
}

// GetNodes returns getCiConfigDataCiConfigStagesCiConfigStageConnection.Nodes, and is useful for accessing the field via an interface.
func (v *getCiConfigDataCiConfigStagesCiConfigStageConnection) GetNodes() []PipelineStagesConnectionNodesCiConfigStage {
	return v.PipelineStagesConnection.Nodes
}

func (v *getCiConfigDataCiConfigStagesCiConfigStageConnection) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*getCiConfigDataCiConfigStagesCiConfigStageConnection
		graphql.NoUnmarshalJSON
	}
	firstPass.getCiConfigDataCiConfigStagesCiConfigStageConnection = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.PipelineStagesConnection)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalgetCiConfigDataCiConfigStagesCiConfigStageConnection struct {
	Typename string `json:"__typename"`

	Nodes []PipelineStagesConnectionNodesCiConfigStage `json:"nodes"`
}

func (v *getCiConfigDataCiConfigStagesCiConfigStageConnection) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *getCiConfigDataCiConfigStagesCiConfigStageConnection) __premarshalJSON() (*__premarshalgetCiConfigDataCiConfigStagesCiConfigStageConnection, error) {
	var retval __premarshalgetCiConfigDataCiConfigStagesCiConfigStageConnection

	retval.Typename = v.Typename
	retval.Nodes = v.PipelineStagesConnection.Nodes
	return &retval, nil
}

// getCiConfigDataResponse is returned by getCiConfigData on success.
type getCiConfigDataResponse struct {
	// Linted and processed contents of a CI config.
	// Should not be requested more than once per request.
	CiConfig getCiConfigDataCiConfig `json:"ciConfig"`
}

// GetCiConfig returns getCiConfigDataResponse.CiConfig, and is useful for accessing the field via an interface.
func (v *getCiConfigDataResponse) GetCiConfig() getCiConfigDataCiConfig { return v.CiConfig }

// The query executed by getBlobContent.
const getBlobContent_Operation = `
query getBlobContent ($projectPath: ID!, $path: String!, $ref: String) {
	project(fullPath: $projectPath) {
		id
		repository {
			blobs(paths: [$path], ref: $ref) {
				nodes {
					id
					rawBlob
				}
			}
		}
	}
}
`

func getBlobContent(
	ctx_ context.Context,
	client_ graphql.Client,
	projectPath string,
	path string,
	ref string,
) (data_ *getBlobContentResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "getBlobContent",
		Query:  getBlobContent_Operation,
		Variables: &__getBlobContentInput{
			ProjectPath: projectPath,
			Path:        path,
			Ref:         ref,
		},
	}

	data_ = &getBlobContentResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by getCiConfigData.
const getCiConfigData_Operation = `
query getCiConfigData ($projectPath: ID!, $sha: String, $content: String!) {
	ciConfig(projectPath: $projectPath, sha: $sha, content: $content) {
		errors
		includes {
			location
			type
			blob
			raw
			__typename
		}
		mergedYaml
		status
		stages {
			... PipelineStagesConnection
			__typename
		}
		__typename
	}
}
fragment PipelineStagesConnection on CiConfigStageConnection {
	nodes {
		name
		groups {
			nodes {
				name
				size
				jobs {
					nodes {
						name
						script
						beforeScript
						afterScript
						environment
						allowFailure
						tags
						when
						only {
							refs
							__typename
						}
						except {
							refs
							__typename
						}
						needs {
							nodes {
								name
								__typename
							}
							__typename
						}
						__typename
					}
					__typename
				}
				__typename
			}
			__typename
		}
		__typename
	}
	__typename
}
`

func getCiConfigData(
	ctx_ context.Context,
	client_ graphql.Client,
	projectPath string,
	sha string,
	content string,
) (data_ *getCiConfigDataResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "getCiConfigData",
		Query:  getCiConfigData_Operation,
		Variables: &__getCiConfigDataInput{
			ProjectPath: projectPath,
			Sha:         sha,
			Content:     content,
		},
	}

	data_ = &getCiConfigDataResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}
