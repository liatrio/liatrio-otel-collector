---
name: Build and Test

on:
    pull_request:
        branches: [main]
    push:
        branches: [main]

jobs:
    lint:
        strategy:
            matrix:
                go: ['1.20']
        name: lint
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ matrix.go }}
                  cache: false

            - name: Make install-tools
              run: make install-tools

            - name: Make lint-all
              run: make lint-all

            - name: Check GenQlient
              run: |
                  make genqlient-all
                  git diff -s --exit-code || (echo 'Generated GraphQL queries are out of date. Run make genqlient-all and commit the changes' && exit 1)

            - name: Check packages are up-to-date
              run: |
                  make tidy-all
                  git diff -s --exit-code || (echo 'Packages are out of date. Run make tidy-all and commit the changes' && exit 1)

            - name: Check metagen-all
              run: |
                  make metagen-all
                  git diff -s --exit-code || (echo 'Generated metrics and docs are out of date. Run make metagen-all and commit the changes' && exit 1)

    build:
        name: build
        strategy:
            matrix:
                GOOS: [darwin, linux, windows]
                go: ['1.20']
        runs-on:
            group: bigger
        steps:
            - name: Check out code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ matrix.go }}
                  cache: false

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v2

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Run GoReleaser
              uses: goreleaser/goreleaser-action@v4
              if: steps.cache.outputs.cache-hit != 'true'
              with:
                  distribution: goreleaser-pro
                  version: latest
                  args: release --clean --snapshot --split
              env:
                  GOOS: ${{ matrix.GOOS }}
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}

    test:
        strategy:
            matrix:
                go: ['1.20']
        name: test
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ matrix.go }}
                  cache: false

            - name: Make test-all
              run: make test-all

    go-semantic-release:
        if: ${{ github.ref == 'refs/heads/main' }}
        needs: [lint, build]
        runs-on:
            group: bigger
        permissions:
            contents: write
        steps:
            - name: Run go-semantic-release
              uses: go-semantic-release/action@v1
              with:
                  github-token: ${{ secrets.SEMANTIC_RELEASE_GH_PAT }}
                  changelog-generator-opt: emojis=true
                  allow-initial-development-versions: true
