name: Lint, Build, Test and Release

on:
  pull_request:
    branches: [main]
  workflow_call:

jobs:
    lint:
        strategy:
          matrix:
            go: ['1.19']
            os: [ubuntu-latest, macos-latest]
        name: lint
        runs-on: ${{ matrix.os }}
        steps:
          - uses: actions/checkout@v3
          - uses: actions/setup-go@v4
            with:
              go-version: ${{ matrix.go }}
              cache: false

          - name: Make install-tools
            run: make install-tools

          - name: Make lint-all
            run: make lint-all

    build:
      strategy:
        matrix:
          go: ['1.19']
          os: [ubuntu-latest, macos-latest]
      name: build
      runs-on: ${{ matrix.os }}
      steps:
        - name: Check out code
          uses: actions/checkout@v3
          with:
            fetch-depth: 0

        - name: Set up Go
          uses: actions/setup-go@v4
          with:
            go-version: '1.19'
            cache: false

        - name: Make cibuild
          run: make cibuild

    go-semantic-release:
      if: ${{ github.ref == 'refs/heads/main' }}
      needs: [lint, build]
      runs-on: ubuntu-latest
      permissions:
        contents: write
      steps:
        - name: Run go-semantic-release
          uses: go-semantic-release/action@v1
          env:
            github_token: ${{ secrets.GITHUB_TOKEN }}

    goreleaser:
      if: ${{ github.ref == 'refs/heads/main' }}
      needs: [go-semantic-release]
      runs-on: ubuntu-latest
      permissions:
        contents: write
      steps:
        - name: Checkout
          uses: actions/checkout@v3
          with:
            fetch-depth: 0

        - name: Fetch all tags
          run: git fetch --force --tags

        - name: Set up Go
          uses: actions/setup-go@v4
          with:
            go-version: 1.19

        - name: Run GoReleaser
          uses: goreleaser/goreleaser-action@v4
          with:
            distribution: goreleaser
            version: latest
            args: release --clean
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
