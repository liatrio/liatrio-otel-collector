---
name: Build and Test

on:
    pull_request:
        branches: [main]
    push:
        branches: [main]

jobs:
    prep-env:
        name: prepare environment
        strategy:
            matrix:
                go: ['1.19']
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - uses: actions/setup-go@v4
              with:
                  go-version: ${{ matrix.go }}
                  cache: false

            - name: Make install-tools
              run: make install-tools

            - name: Make cibuild
              run: make cibuild

            - name: Cache directories
              uses: actions/cache@v2
              with:
                  path: |
                      ~/go/bin
                      ./build
                      ./tmp
                      /usr/local/bin
                  key: ${{ runner.os }}-make-${{ hashFiles('**/Makefile') }}
                  restore-keys: |
                      ${{ runner.os }}-make-

    lint:
        needs: [prep-env]
        strategy:
            matrix:
                go: ['1.19']
        name: lint
        runs-on: unbuntu-latest
        steps:
            - uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ matrix.go }}
                  cache: false

            - name: Restore cache
              uses: actions/cache@v2
              with:
                  path: |
                      ~/go/bin
                      ./build
                      ./tmp
                      /usr/local/bin
                  key: ${{ runner.os }}-make-${{ hashFiles('**/Makefile') }}
                  restore-keys: |
                      ${{ runner.os }}-make-

            - name: Make lint-all
              run: make lint-all

    build:
        name: build
        needs: [prep-env]
        strategy:
            matrix:
                go: ['1.19']
                GOOS: [linux, darwin, windows]
                GOARCH: ['386', amd64, arm64]
                exclude:
                    - GOOS: darwin
                      GOARCH: '386'
                    - GOOS: windows
                      GOARCH: arm64
        runs-on: unbuntu-latest
        steps:
            - name: Check out code
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            ## Commenting out for now
            ## MacOs for multi-platform builds through QEMU isn't currently supported
            ## because the runner doesn't use docker desktop and just uses the cli
            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ matrix.go }}
                  cache: false

            - name: Restore cache
              uses: actions/cache@v2
              with:
                  path: |
                      ~/go/bin
                      ./build
                      ./tmp
                      /usr/local/bin
                  key: ${{ runner.os }}-make-${{ hashFiles('**/Makefile') }}
                  restore-keys: |
                      ${{ runner.os }}-make-


            ## TODO: fails on macos matrics, remove this entirely if neccessary 
            ## MacOs for multi-platform builds through QEMU isn't currently supported
            ## because the runner doesn't use docker desktop and just uses the cli
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v2
              with:
                  platforms: arm64,"386"

            ## TODO: fails on macos matrics, remove this entirely if neccessary 
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Run GoReleaser
              uses: goreleaser/goreleaser-action@v4
              with:
                  distribution: goreleaser
                  version: latest
                  args: release --clean --snapshot --split
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  GOOS: ${{ matrix.GOOS }}
                  GOARCH: ${{ matrix.GOARCH }}

    go-semantic-release:
        if: ${{ github.ref == 'refs/heads/main' }}
        needs: [lint, build]
        runs-on: ubuntu-latest
        permissions:
            contents: write
        steps:
            - name: Run go-semantic-release
              uses: go-semantic-release/action@v1
              with:
                  github-token: ${{ secrets.SEMANTIC_RELEASE_GH_PAT }}
                  changelog-generator-opt: emojis=true
                  allow-initial-development-versions: true
