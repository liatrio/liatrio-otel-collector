name: Build, Test and Release

on:
  push:
    branches:
      - main

jobs:
    golangci:
        strategy:
          matrix:
            go: ['1.19']
            os: [ubuntu-latest, macos-latest, windows-latest]
        name: lint
        runs-on: ${{ matrix.os }}
        steps:
          - uses: actions/checkout@v3
          - uses: actions/setup-go@v4
            with:
              go-version: ${{ matrix.go }}
              cache: false
          - name: golangci-lint
            uses: golangci/golangci-lint-action@v3
            with:
              # Require: The version of golangci-lint to use.
              # When `install-mode` is `binary` (default) the value can be v1.2 or v1.2.3 or `latest` to use the latest version.
              # When `install-mode` is `goinstall` the value can be v1.2.3, `latest`, or the hash of a commit.
              version: v1.53
    
              # Optional: working directory, useful for monorepos
              # working-directory: somedir
    
              # Optional: golangci-lint command line arguments.
              # 
              # Note: by default the `.golangci.yml` file should be at the root of the repository.
              # The location of the configuration file can be changed by using `--config=`
              # args: --timeout=30m --config=/my/path/.golangci.yml --issues-exit-code=0
    
              # Optional: show only new issues if it's a pull request. The default value is `false`.
              # only-new-issues: true
    
              # Optional:The mode to install golangci-lint. It can be 'binary' or 'goinstall'.
              # install-mode: "goinstall"
              
    make-build-checks:
      runs-on: ubuntu-latest
      steps:

        - name: Check out code
          uses: actions/checkout@v3
          with:
            fetch-depth: 0

        - name: Set up Go
          uses: actions/setup-go@v4
          with:
            go-version: '1.19'
            cache: false

        - name: Build OpenTelemetry Collector
          run: make cibuild

        - name: Run Checks
          run: make checks

    go-semnatic-release:
      runs-on: ubuntu-latest
      permissions:
        contents: write
      steps:
        - name: Run go-semantic-release
          uses: go-semantic-release/action@v1
          env:
            github_token: ${{ secrets.GITHUB_TOKEN }}

    goreleaser:
      runs-on: ubuntu-latest
      permissions:
        contents: write
      steps:
        - name: Checkout
          uses: actions/checkout@v3
          with:
            fetch-depth: 0
  
        - name: Fetch all tags
          run: git fetch --force --tags
  
        - name: Set up Go
          uses: actions/setup-go@v4
          with:
            go-version: 1.19
  
        - name: Run GoReleaser
          uses: goreleaser/goreleaser-action@v4
          with:
            distribution: goreleaser
            version: latest
            args: release --clean
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
