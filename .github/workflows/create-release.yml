---
name: create-release

on:
  push:
    branches: [main]

jobs:
  create-release:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' && github.actor != 'octo-sts[bot]' && startsWith(github.event.head_commit.message, 'Prepare liatrio-otel for version') }}
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Get Octo Sts Token
        uses: octo-sts/action@210248e8ae1ae1550aa6e232c6f192b3ccbf7335
        id: octo-sts
        with:
          scope: ${{ github.repository }}
          identity: semantic-release

      - name: Clone repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ steps.octo-sts.outputs.token }}
          fetch-depth: 0

      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version: 1.23

      - name: Install tools
        run: make install-tools

      - name: Get changelog
        id: get_tag
        uses: mathieudutour/github-tag-action@a22cf08638b34d5badda920f9daf6e72c477b07b # v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_release_rules: "chore:patch:🧹 Chores,fix:patch:🐛 Bug Fixes,feat:minor:✨ Features"
          dry_run: true
          default_bump: false

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_KEY_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/octo-sts[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.octo-sts.outputs.token }}

      - name: Multimod Push Tags
        run: |
          set -eo pipefail
          git config --global user.name 'octo-sts[bot]'
          git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+octo-sts[bot]@users.noreply.github.com'
          ./.tools/multimod tag --module-set-name liatrio-otel --commit-hash '${{ github.sha }}' --print-tags
          git push --tags

      - name: Create GitHub Release
        env:
          # GH_TOKEN: ${{ secrets.TEST_PAT_TRIGGER }}
          GH_TOKEN: ${{ steps.octo-sts.outputs.token }}
        run: |
          gh release create '${{  steps.get_tag.outputs.new_tag }}' \
            --notes "${{ steps.get_tag.outputs.changelog }}" \
            --target "$(git rev-parse HEAD)"
