---
extensions:
    health_check:
    pprof:
        endpoint: 0.0.0.0:1777
    zpages:
        endpoint: 0.0.0.0:55679
    ## Uncomment below if you want to enable authentication to GitHub
    ## Presume that GH_USER and GH_PAT are set as env variables.
    #basicauth/gitlab:
    #    client_auth:
    #        username: "${env:GITLAB_USER}"
    #        password: ${env:GITLAB_PAT}
    ## Uncomment below if you want to enable authentication to Grafana
    #basicauth/grafana:
    #  client_auth:
    #    username: ${env:GRAF_USER}
    #    password: ${env:GRAF_PAT}
    ## Uncomment below if you want to enable authentication to GitLab
    #bearertokenauth/gitlab:
    #  token: ${env:GL_PAT}

receivers:
    otlp:
        protocols:
            grpc:
            http:

    ## Collect own metrics based on example from OTEL Contrib Dockerfile
    ## https://github.com/open-telemetry/opentelemetry-collector-releases/blob/main/configs/otelcol-contrib.yaml
    prometheus:
        config:
            scrape_configs:
                - job_name: liatrio-otel-collector
                  scrape_interval: 10s
                  static_configs:
                      - targets: [0.0.0.0:8888]

    gitprovider:
        initial_delay: 1s
        collection_interval: 60s
        scrapers:
            github:
                github_org: ${env:GITHUB_ORG}
                search_query: org:${env.GITHUB_ORG}
            ## Uncomment if you want to view private authentication required
            ## GitHub data or and decrease rate limiting.
            #auth:
            #    authenticator: basicauth/github
            gitlab:
                gitlab_org: ${env:GL_ORG}
            ## Uncomment if you want to view private authentication required
            ## GitHub data or and decrease rate limiting.
            #auth:
            #  authenticator: bearertokenauth/gitlab

processors:
    batch:
    resourcedetection:
        detectors: [env]
        timeout: 2s
        override: false


exporters:
    logging:
        verbosity: detailed

    ## Uncomment if you want to use OTLP exportation to Grafana cloud
    ## and update with your region
    #otlphttp:
    #  auth:
    #    authenticator: basicauth/grafana
    #  endpoint: https://otlp-gateway-prod-us-central-0.grafana.net/otlp

service:
    ## Add basicauth/* if you want to use basic auth extensions
    ## Add bearertokenauth/* if you want to use bearer token auth extensions
    extensions: [health_check, pprof, zpages]
    pipelines:
        metrics:
            receivers: [otlp, prometheus, gitprovider]
            processors: [resourcedetection, batch]
            exporters: [logging]

        traces:
            receivers: [otlp]
            processors: [resourcedetection, batch]
            exporters: [logging]

    telemetry:
        logs:
            level: debug
